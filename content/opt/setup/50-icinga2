#!/bin/bash

if [ ! "$(ls -A /etc/icinga2)" ]; then
  echo "=> Copying fresh config-files for /etc/icinga2"
  cp -R /etc/icinga2.dist/* /etc/icinga2/
fi

# chown directories and files that might be coming from volumes
mkdir -p /var/log/icinga2/compat/archives
chown -R nagios:adm /var/log/icinga2

mkdir -p /var/lib/icinga2/api/zones
mkdir -p /var/lib/icinga2/api/log
mkdir -p /var/lib/icinga2/api/repository
chown -R nagios:nagios /var/lib/icinga2
chown -R nagios:nagios /var/spool/icinga2
chown -R nagios:nagios /var/cache/icinga2

chown -R nagios:root /etc/icinga2

# enable neccessary features
icinga2 feature enable ido-mysql livestatus compatlog command

#icinga2 API cert - regenerate new private key and certificate when running in a new container
if [ ! -f "/etc/icinga2/pki/$(hostname).key" ]; then
	icinga2 node setup --master
fi

chfn -f "${ICINGA2_USER_FULLNAME}" nagios


# IDO MySQL
cat > /etc/icinga2/features-available/ido-mysql.conf <<-END
/**
 * The db_ido_mysql library implements IDO functionality
 * for MySQL.
 */

library "db_ido_mysql"

object IdoMysqlConnection "ido-mysql" {
  user = "icinga2-ido-mysq",
  password = "${IDO_PASSWORD}",
  host = "localhost",
  database = "icinga2idomysql"
}
END

mysql <<-END
  CREATE DATABASE IF NOT EXISTS icinga2idomysql;
  GRANT SELECT, INSERT, UPDATE, DELETE, DROP, CREATE VIEW, INDEX, EXECUTE ON icinga2idomysql.* TO 'icinga2-ido-mysq'@'localhost' IDENTIFIED BY '${IDO_PASSWORD}';
END

mysql icinga2idomysql < /usr/share/dbconfig-common/data/icinga2-ido-mysql/install/mysql >> /var/log/icinga2/ido-mysql-schema.log 2>&1
